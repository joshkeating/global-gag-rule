return(relative_risk)
}
# calculate relative risk: smoking status
calc_relative_risk(birthweight, 'smoke')
smoke_relative_risk <- calc_relative_risk(birthweight, 'smoke')
hypertension_relative_risk <- calc_relative_risk(birthweight, 'ht')
hypertension_relative_risk
smoke_relative_risk
birthweight[birthweight[, "ftv"] == 0,]
birthweight[birthweight[, "ftv"] == 0,]
birthweight[birthweight[, "ftv"] == 0,]$'zero_visits' = 1
birthweight <- birthweight %>% mutate(zero_visits = 0)
birthweight
birthweight[birthweight[, "ftv"] == 0,]$'zero_visits' = 1
View(birthweight)
zerovisits_relative_risk <- calc_relative_risk((birthweight, 'zero_visits'))
zerovisits_relative_risk <- calc_relative_risk(birthweight, 'zero_visits')
zerovisits_relative_risk
# calculate relative risk: giving birth before age 20
birthweight <- birthweight %>% mutate(birth_before_20 = 0)
# then conditially set birth-before_20 to 1 if birth occurred before age of 20
birthweight[birthweight[, "age"] < 20,]$birth_before_20 = 1
View(birthweight)
birthbefore20_relative_risk <- calc_relative_risk(birthweight, 'birth_before_20')
birthbefore20_relative_risk
kable(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk)
kable(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk)
kable(c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk)
kable(c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk)
kable(c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk))
kable(c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk), col.names = c("Smoking", "Hypertension", "Zero Physician Visit During First Trimester", "Birth Before Age 20"))
?kable
c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk)
kable(c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk))
kable(c("smoke", smoke_relative_risk))
kable(c(c(smoke_relative_risk)), col.names = "hello")
kable(c(c(smoke_relative_risk), c(hypertension_relative_risk), c(zerovisits_relative_risk), c(birthbefore20_relative_risk)), col.names = c("Smoking", "Hypertension", "Zero Physician Visits During First Trimester", "Birth Before Age 20"))
kable(c(c(smoke_relative_risk, hypertension_relative_risk)), col.names = c("hello", "hel"))
kable(c(c(smoke_relative_risk),c(hypertension_relative_risk)), col.names = c("hello", "hel"))
risks <- c(smoke_relative_risk, hypertension_relative_risk, zerovisits_relative_risk, birthbefore20_relative_risk)
labels <- c("Smoking", "Hypertension", "Zero Physician Visits During First Trimester", "Birth Before Age 20")
table <- tbl_df(risks, labels)
?tbl_df
table <- data.frame(risks, labels)
kable(table)
table <- data.frame(labels, risks)
kable(table)
?data.frame
table <- data.frame(x= labels, y= risks)
kable(table)
risks
risks[1]
risks[1][1]
risks[1,]
zerovisits_relative_risk.numeric()
zerovisits_relative_risk.asnumeric()
as.numeric(zerovisits_relative_risk)
zerovisits_relative_risk
risks <- c(as.numeric(smoke_relative_risk), as.numeric(hypertension_relative_risk), as.numeric(zerovisits_relative_risk), as.numeric(birthbefore20_relative_risk))
labels <- c("Smoking", "Hypertension", "Zero Physician Visits During First Trimester", "Birth Before Age 20")
table <- data.frame(x= labels, y= risks)
kable(table)
table <- data.frame(labels, risks)
kable(table)
table <- data.frame(risk= labels, value= risks)
kable(table)
table <- data.frame(value= risks, row.names = labels)
kable(table)
table <- data.frame(risks, row.names = labels)
kable(table)
kable(table)
table <- data.frame(risk = risks, row.names = labels)
kable(table)
unlink('Documents/INFO498C/a2-risk-factors-pfreschi/index_cache', recursive = TRUE)
install.packages("epitools")
library(epitools)
?epitools
?epitab
install.packages("Epi")
library(Epi)
bdendo
bdendo
?Epi
data(bdendo)
bdendo
View(bdendo)
?bdendo
?epitab
r243 <- matrix(c(12,2,7,9), 2, 2)
dimnames(r243) <- list(Diarrhea = c("Yes", "No"),
"Antibody level" = c("Low", "High")
)
r243
t(r243)
hypertensive_table <- matrix(c(1,2,3,4), 2, 2)
dimnames(hypertensive_table) <- list(Endometrial_Cancer = c("No", "Yes"),
"Hypertensive" = c("No", "Yes")
)
hypertensive_table
?t
hypertensive_table <- matrix(c(1,2,3,4), 2, 2)
dimnames(hypertensive_table) <- list(
"Hypertensive" = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
hypertensive_table
?bdendo
endodata <- bdendo
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% tally()
noOutcomeNoExposure
noOutcomeExposure <- endodata %>% filter(d == 0, hyp == "Yes") %>% tally()
noOutcomeExposure
outcomeNoExposure <- endodata %>% filter(d == 1, hyp == "No") %>% tally()
outcomeExposure <- endodata %>% filter(d == 1, hyp == "Yes") %>% tally()
typeof(noOutcomeNoExposure)
?tally
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% n()
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% count()
typeof(noOutcomeNoExposure)
noOutcomeNoExposure*outcomeNoExposure
epitab(hypertensive_table, method="oddsratio", verbose=TRUE)
epitab(hypertensive_table, method="oddsratio")
hypertensive_table
# gather endometrial data
endodata <- bdendo
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% count()
noOutcomeExposure <- endodata %>% filter(d == 0, hyp == "Yes") %>% tally()
outcomeNoExposure <- endodata %>% filter(d == 1, hyp == "No") %>% tally()
outcomeExposure <- endodata %>% filter(d == 1, hyp == "Yes") %>% tally()
# create the 2x2 matrix in prep for epitab
hypertensive_table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(hypertensive_table) <- list(
"Hypertensive" = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
epitab(hypertensive_table, method="oddsratio")
# gather endometrial data
endodata <- bdendo
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% tally()
noOutcomeExposure <- endodata %>% filter(d == 0, hyp == "Yes") %>% tally()
outcomeNoExposure <- endodata %>% filter(d == 1, hyp == "No") %>% tally()
outcomeExposure <- endodata %>% filter(d == 1, hyp == "Yes") %>% tally()
# create the 2x2 matrix in prep for epitab
hypertensive_table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(hypertensive_table) <- list(
"Hypertensive" = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
epitab(hypertensive_table, method="oddsratio")
# gather endometrial data
endodata <- bdendo
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% count()
noOutcomeExposure <- endodata %>% filter(d == 0, hyp == "Yes") %>% count()
outcomeNoExposure <- endodata %>% filter(d == 1, hyp == "No") %>% count()
outcomeExposure <- endodata %>% filter(d == 1, hyp == "Yes") %>% count()
# create the 2x2 matrix in prep for epitab
hypertensive_table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(hypertensive_table) <- list(
"Hypertensive" = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
epitab(hypertensive_table, method="oddsratio")
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% summarise(n())
# gather endometrial data
endodata <- bdendo
noOutcomeNoExposure <- endodata %>% filter(d == 0, hyp == "No") %>% summarise(n())
noOutcomeExposure <- endodata %>% filter(d == 0, hyp == "Yes") %>% summarise(n())
outcomeNoExposure <- endodata %>% filter(d == 1, hyp == "No") %>% summarise(n())
outcomeExposure <- endodata %>% filter(d == 1, hyp == "Yes") %>% summarise(n())
# create the 2x2 matrix in prep for epitab
hypertensive_table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(hypertensive_table) <- list(
"Hypertensive" = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
epitab(hypertensive_table, method="oddsratio")
endodata %>% filter(d == 0, hyp == "No") %>% tally()
typeof(endodata %>% filter(d == 0, hyp == "No") %>% tally())
typeof(as.numeric(endodata %>% filter(d == 0, hyp == "No") %>% tally()))
endodata <- bdendo
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, hyp == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, hyp == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, hyp == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, hyp == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
hypertensive_table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(hypertensive_table) <- list(
"Hypertensive" = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
epitab(hypertensive_table, method="oddsratio")
hypertensive_table
noOutcomeExposure
create_2x2_matrix_for_OR <- function(endodata, exposure_column_name){
column <- endodata[[exposure_column_name]]
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, column == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, column == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, column == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, column == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
return(table)
}
create_2x2_matrix_for_OR <- function(endodata, exposure_column_name, formal_name){
column <- endodata[[exposure_column_name]]
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, column == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, column == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, column == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, column == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(table) <- list(
formal_name = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
return(table)
}
hypertensive_table <- create_2x2_matrix_for_OR(endodata, "hyp", "Hypertensive")
epitab(hypertensive_table, method="oddsratio")
epitab(hypertensive_table, method="oddsratio")
# gather endometrial data
endodata <- bdendo
# generate 2x2 matrix for hypertension
hypertensive_table <- create_2x2_matrix_for_OR(endodata, "hyp", "Hypertensive")
# generate 2x2 matrix for gall bladder disease
gallbladder_table <- create_2x2_matrix_for_OR(endodata, "gall", "Gall Bladder Disease")
# generate 2x2 matrix for gall bladder obesity
obesity_table <- create_2x2_matrix_for_OR(endodata, "ob", "Obesity")
epitab(hypertensive_table, method="oddsratio")
epitab(gallbladder_table)
hypertensive_table
create_2x2_matrix_for_OR <- function(endodata, exposure_column_name){
column <- endodata[[exposure_column_name]]
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, column == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, column == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, column == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, column == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(table) <- list(
Exposed = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
return(table)
# gather endometrial data
endodata <- bdendo
# generate 2x2 matrix for hypertension
hypertensive_table <- create_2x2_matrix_for_OR(endodata, "hyp")
# generate 2x2 matrix for gall bladder disease
gallbladder_table <- create_2x2_matrix_for_OR(endodata, "gall")
# generate 2x2 matrix for gall bladder obesity
obesity_table <- create_2x2_matrix_for_OR(endodata, "ob")
epitab(hypertensive_table, method="oddsratio")
epitab(gallbladder_table)
epitab(hypertensive_table, method="oddsratio")
epitab(hypertensive_table, method="oddsratio")
hypertensive_table
create_2x2_matrix_for_OR <- function(endodata, exposure_column_name){
column <- endodata[[exposure_column_name]]
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, column == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, column == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, column == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, column == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(table) <- list(
Exposed = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
return(table)
}
create_2x2_matrix_for_OR <- function(endodata, exposure_column_name){
column <- endodata[[exposure_column_name]]
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, column == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, column == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, column == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, column == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(table) <- list(
Exposed = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
return(table)
}
# gather endometrial data
endodata <- bdendo
# generate 2x2 matrix for hypertension
hypertensive_table <- create_2x2_matrix_for_OR(endodata, "hyp")
# generate 2x2 matrix for gall bladder disease
gallbladder_table <- create_2x2_matrix_for_OR(endodata, "gall")
# generate 2x2 matrix for gall bladder obesity
obesity_table <- create_2x2_matrix_for_OR(endodata, "ob")
epitab(hypertensive_table, method="oddsratio")
epitab(gallbladder_table)
epitab(gallbladder_table, method="oddsratio")
epitab(obesity_table, method="oddsratio")
epitab(obesity_table, method="oddsratio")["Yes",oddsratio]
epitab(obesity_table, method="oddsratio")[oddsratio, "Yes"]
epitab(obesity_table, method="oddsratio")
View(epitab(obesity_table, method="oddsratio"))
test <- epitab(obesity_table, method="oddsratio")
test$tab.oddsratio
test$'tab.oddsratio'
test$'Yes'
test$Yes
typeof(test)
test[0]
test[0, 1]
dim(test)
kable(epitab(obesity_table, method="oddsratio"))
test$tab
test$tab['Yes']
test$tab['oddsratio']
typeof(test$tab['oddsratio'])
typeof(test$tab)
data(bdendo)
summarise(bcg_data, min(odd.ratio))
bcg_data %>% summarise(min(odd.ratio))
bcg_data %>% summarise(min = min(odd.ratio))
View(bcg_data)
kable(data.frame(labels, vals))
library(HSAUR)
library(dplyr)
library(ggplot2)
library(knitr)
library(MASS)
library(epitools)
library(Epi)
bcg_data <- tbl_df(BCG)
bcg_data <- bcg_data %>% mutate(odds.ratio = (BCGTB/NoVaccTB)/((BCGVacc-BCGTB)/(NoVacc-NoVaccTB)))
ggplot(bcg_data, aes(x= factor(Study), y= odds.ratio)) + geom_bar(stat = "identity") + labs(title = "Odds Ratios for BCG-TB", x="Study", y="Odds Ratio")
cor(bcg_data$Latitude, bcg_data$odds.ratio)
ggplot(bcg_data, aes(x=Latitude, y=odds.ratio)) + geom_point(colour = 'purple') + geom_smooth(method="lm", se=FALSE) + labs(title="Latitude vs. Odds Ratio", x="Latitude", y="Odds Ratio")
cor(bcg_data$Year, bcg_data$odds.ratio)
ggplot(bcg_data, aes(x=Year, y=odds.ratio)) + geom_point(colour = 'red') + geom_smooth(method="lm", se=FALSE) + labs(title="Year vs. Odds Ratio", x="Year", y="Odds Ratio")
bcg_data <- bcg_data %>% mutate(relative.risk = (BCGTB/BCGVacc)/(NoVaccTB/NoVacc))
cor(bcg_data$relative.risk, bcg_data$odds.ratio)
ggplot(bcg_data, aes(x=relative.risk, y=odds.ratio)) + geom_point(colour = 'green') + labs(title="Relative Risk vs. Odds Ratio")
birthweight <- birthwt
## summary statistics
# proportion of low birth weights
numberOfLBWs <- birthweight %>% filter(low == 1) %>% tally()
numberOfNonLBWs <- birthweight %>% filter(low == 0) %>% tally()
#proportion of smokers
numberOfSmokers <- birthweight %>% filter(smoke == 1) %>% tally()
numberOfNonSmokers <- birthweight %>% filter(smoke == 0) %>% tally()
#mean birth weight - see below
labels <- c("Ratio of Low Birth Weights","Ratio of Smokers","Mean Birth Weight")
vals <- c(as.numeric(numberOfLBWs/(numberOfLBWs + numberOfNonLBWs)),as.numeric(numberOfSmokers/(numberOfSmokers + numberOfNonSmokers)), as.numeric(birthweight %>% summarise(average_birth_weight = mean(bwt))))
kable(data.frame(labels, vals), col.names = c("Measure","Value"), caption="Summary Statistics")
#numbers of people from each race
kable(birthweight %>% group_by(race) %>% summarise(n()), caption="Number of People by Race (White = 1, Black = 2, Other = 3)", col.names = c("Identifier", "Number"))
# calculate relative risk for outcome variable (low)
calc_relative_risk <- function(data, column_name){
column <- data[[column_name]]
exposureNoOutcome <- data %>% filter(column == 1, low == 0) %>% tally()
exposureOutcome <- data %>% filter(column == 1, low == 1) %>% tally()
noExposureNoOutcome <- data %>% filter(column == 0, low == 0) %>% tally()
noExposureOutcome <- data %>% filter(column == 0, low == 1) %>% tally()
num <- exposureOutcome/(exposureOutcome + exposureNoOutcome)
denom <- noExposureOutcome/(noExposureNoOutcome + noExposureOutcome)
relative_risk <- num/denom
return(relative_risk)
}
# calculate relative risk: smoking status
smoke_relative_risk <- calc_relative_risk(birthweight, 'smoke')
# calculate relative risk: hypertension status
hypertension_relative_risk <- calc_relative_risk(birthweight, 'ht')
# calculate relative risk: attending 0 prenatal care visits
# create new column initially w/ 0s
birthweight <- birthweight %>% mutate(zero_visits = 0)
# then conditially set zero_visits to 1 if no visits occured in first trimester
birthweight[birthweight[, "ftv"] == 0,]$'zero_visits' = 1
zerovisits_relative_risk <- calc_relative_risk(birthweight, 'zero_visits')
# calculate relative risk: giving birth before age 20
birthweight <- birthweight %>% mutate(birth_before_20 = 0)
# then conditially set birth-before_20 to 1 if birth occurred before age of 20
birthweight[birthweight[, "age"] < 20,]$birth_before_20 = 1
birthbefore20_relative_risk <- calc_relative_risk(birthweight, 'birth_before_20')
risks <- c(as.numeric(smoke_relative_risk), as.numeric(hypertension_relative_risk), as.numeric(zerovisits_relative_risk), as.numeric(birthbefore20_relative_risk))
labels <- c("Smoking", "Hypertension", "Zero Physician Visits During First Trimester", "Birth Before Age 20")
table <- data.frame(risk = risks, row.names = labels)
kable(table, caption="Relative Risks Leading to Low Birth Weight")
create_2x2_matrix_for_OR <- function(endodata, exposure_column_name){
column <- endodata[[exposure_column_name]]
noOutcomeNoExposure <- as.numeric(endodata %>% filter(d == 0, column == "No") %>% tally())
noOutcomeExposure <- as.numeric(endodata %>% filter(d == 0, column == "Yes") %>% tally())
outcomeNoExposure <- as.numeric(endodata %>% filter(d == 1, column == "No") %>% tally())
outcomeExposure <- as.numeric(endodata %>% filter(d == 1, column == "Yes") %>% tally())
# create the 2x2 matrix in prep for epitab
table <- matrix(c(noOutcomeNoExposure, noOutcomeExposure, outcomeNoExposure, outcomeExposure), 2, 2)
dimnames(table) <- list(
Exposed = c("No", "Yes"),
Endometrial_Cancer = c("No", "Yes")
)
return(table)
}
# gather endometrial data
data(bdendo)
endodata <- bdendo
# generate 2x2 matrix for hypertension
hypertensive_table <- create_2x2_matrix_for_OR(endodata, "hyp")
# generate 2x2 matrix for gall bladder disease
gallbladder_table <- create_2x2_matrix_for_OR(endodata, "gall")
# generate 2x2 matrix for gall bladder obesity
obesity_table <- create_2x2_matrix_for_OR(endodata, "ob")
kable(epitab(hypertensive_table, method="oddsratio")$tab, caption = "Hypertension")
kable(epitab(gallbladder_table, method="oddsratio")$tab, caption="Gall Bladder Disease")
kable(epitab(obesity_table, method="oddsratio")$tab, caption="Obesity")
setwd("~/Documents/INFO498C/a3-survey-analysis-pfreschi")
library(survey)
library(dplyr)
library(SASxport)
library(Hmisc)
data_2015 <- sasxport.get('./data/LLCP2015.XPT')
library(survey)
library(dplyr)
library(ggplot2)
data(api)
View(apipop)
filter(apipop, name == "Menlo Atherton")
filter(apipop, name == "Menlo Atherton High")
filter(apipop, name == "Menlo-Atherton High")
?count
apipop %>% tally(name)
tally(apipop, name)
nrow(apipop)
apipop %>% group_by(dnum) %>% tally()
apipop %>%
group_by(dnum) %>%
count()
apipop %>%
group_by(dnum) %>%
nrow()
apipop %>%
group_by(dnum)
count(apipop, dnum)
count(apipop, dnum, dnum)
tally(apipop, dnum)
?uniue
?unique
apipop %>% group_by(dnum) %>% count(dnum)
apipop %>% group_by(dnum) %>% count()
length(unique(apipop$dnum)) # 757
?table
table(stype)
table(apipop$stype)
table(apipop$stype)
table(apistrat$stype)
table(apistrat$stype)
table(apipop$stype)
table(1/apistrat$stype)
table(apistrat$(stype/1)
table(apistrat$(stype/1))
table(apistrat$stype)/table(apipop$stype)
table(apipop$stype)/table(apistrat$stype)
probabilityweights <- table(apipop$stype)/table(apistrat$stype)
probability.weights <- table(apipop$stype)/table(apistrat$stype)
sum(apistrat$pw) # 6194, same as population
table(apistrat$pw, apistrat$stype)
design.no.fpc <- svydesign(id=~1,strata=~stype, weights=~pw, data=apistrat)
mean(apipop$api00) # 664
mean(apistrat$api00) # 652
svymean(~api00, stratified.design) #662
svymean(~api00, stratified.design) #662
stratified.design <- svydesign(id=~1,           # Sample directly (no clusters)
strata=~stype,   # Stratified by school type
weights=~pw,     # Computed sample weights (based on prob. of selection)
fpc=~fpc,        # Finite population correction (optional: reduces variance)
data=apistrat)
design.no.fpc <- svydesign(id=~1,strata=~stype, weights=~pw, data=apistrat)
mean(apipop$api00) # 664
mean(apistrat$api00) # 652
svymean(~api00, stratified.design) #662
svymean(~api00, design.no.fpc) #662
?read.csv
setwd("~/Documents/INFO498C/global-gag-rule")
setwd("~/Documents/INFO498C/global-gag-rule")
read.csv('data/UN.csv')
data <- read.csv('data/UN.csv')
View(data)
table(apipop$dnum)
length(unique(apipop$dnum)) # 757
table(apiclus1$dnum)
length(unique(apiclus1$dnum)) # 15
hist(apiclus1$pw)
table(apiclus1$dnum)
length(unique(apiclus1$dnum)) # 15
hist(apiclus1$pw)
unique(apiclus1$pw) # Assumes clusters (districts) are the same
dclus1<-svydesign(id=~dnum, weights=~pw, fpc=~fpc, data=apiclus1) # Use weight and fpc (this is redundant)
library(survey)
library(dplyr)
library(ggplot2)
data(api)
hist(apiclus1$pw)
unique(apiclus1$pw) # Assumes clusters (districts) are the same
hist(apiclus1$pw)
unique(apiclus1$pw) # Assumes clusters (districts) are the same
dclus1<-svydesign(id=~dnum, weights=~pw, fpc=~fpc, data=apiclus1) # Use weight and fpc (this is redundant)
dclus1.no.weights <-svydesign(id=~dnum, fpc=~fpc, data=apiclus1)  # Use only fpc (weight computed from fpc)
dclus1.no.fpc <-svydesign(id=~dnum, weights=~pw, data=apiclus1)   # Use only weight (lose information for variation)
svymean(~api00, dclus1) # 644
svymean(~api00, dclus1.no.weights) # 644 - these are the same, weights are redundant
svymean(~api00, dclus1.no.fpc) # 644, slightly higher SE b/c fpc is more accurate
hist(apiclus1$pw)
unique(apiclus1$pw) # Assumes clusters (districts) are the same
View(apiclus1$pw)
hist(apiclus1$pw)
unique(apiclus1$pw) # Assumes clusters (districts) are the same
hist(apiclus1$pw)
