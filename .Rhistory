binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_jitter() +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point() +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point() +
geom_smooth(method = "loess", colour = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point() +
geom_line() +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point() +
geom_quantile() +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point(colour = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point(colour = "#0072b2") +
coord_flip() +
scale_x_discrete(labels = abbreviate) +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge drinking as a percentage of population by state")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point(colour = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("title")
heavy.drinking.plot
avg.num <- prop.table(svytable(~avg_num_drinks, design=all.states))
least.one <- prop.table(svytable(~days_with_at_least_one, design=all.states))
avg.num <- as.data.frame(avg.num)
avg.num$percentage <- avg.num$Freq * 100
avg.num <- avg.num %>% slice(1:31)
least.one <- as.data.frame(least.one)
# this gives percentage weights consistent with the codebook
least.one$percentage <- least.one$Freq * 100
days.per.week <- slice(least.one, 1:7)
# jesus R is stupid
days.per.week <- mutate(days.per.week, adjdays = 1:7)
days.with.beverage.wk <- ggplot(days.per.week, aes(x=adjdays, y=percentage)) +
geom_smooth(method = "loess", colour = "#0072b2") +
geom_point() +
labs(x = "Number of days with one or more beverages", y = "Weighted National Percentage") +
ggtitle("Days in past week had alcoholic beverage")
days.with.beverage.wk
days.per.30 <- slice(least.one, 8:37)
days.per.30 <- mutate(days.per.30, adjdays = 1:30)
days.with.beverage.30 <- ggplot(days.per.30, aes(x=adjdays, y=percentage)) +
geom_smooth(method = "loess", colour = "#0072b2") +
geom_point() +
labs(x = "Number of days with one or more beverages", y = "Weighted National Percentage") +
ggtitle("Days in past 30 had alcoholic beverage")
days.with.beverage.30
avg.number <- ggplot(avg.num, aes(x=avg_num_drinks, y=percentage)) +
geom_bar(stat = "identity", fill = "#0072b2") +
labs(x = "Average Number of Drinks Per Week", y = "Percentage") +
ggtitle("Computed Number of Drinks of Alcohol Beverages Per Week")
avg.number
no.in.30 <- least.one[39,3]
refused <- least.one[40,3]
not.sure <- least.one[38,3]
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge Drinking As A Percentage Of Population By State")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point(colour = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Heavy Alcohol Consumption As A Percentage Of Population By State")
heavy.drinking.plot
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(survey)
library(ggplot2)
state.table <- read.csv("data/state_table.csv")
alcohol.data <- read.csv("data/alcohol_data.csv")
all.states <-svydesign(id=~X_PSU, strata=~state_code, weights=~X_LLCPWT,
data=alcohol.data, nest=TRUE)
avg.num <- prop.table(svytable(~avg_num_drinks, design=all.states))
least.one <- prop.table(svytable(~days_with_at_least_one, design=all.states))
avg.num <- as.data.frame(avg.num)
avg.num$percentage <- avg.num$Freq * 100
avg.num <- avg.num %>% slice(1:31)
least.one <- as.data.frame(least.one)
# this gives percentage weights consistent with the codebook
least.one$percentage <- least.one$Freq * 100
days.per.week <- slice(least.one, 1:7)
# jesus R is stupid
days.per.week <- mutate(days.per.week, adjdays = 1:7)
days.with.beverage.wk <- ggplot(days.per.week, aes(x=adjdays, y=percentage)) +
geom_smooth(method = "loess", colour = "#0072b2") +
geom_point() +
labs(x = "Number of days with one or more beverages", y = "Weighted National Percentage") +
ggtitle("Days In Past Week Consuming One Or More Alcoholic Beverage")
days.with.beverage.wk
days.per.30 <- slice(least.one, 8:37)
days.per.30 <- mutate(days.per.30, adjdays = 1:30)
days.with.beverage.30 <- ggplot(days.per.30, aes(x=adjdays, y=percentage)) +
geom_smooth(method = "loess", colour = "#0072b2") +
geom_point() +
labs(x = "Number of days with one or more beverages", y = "Weighted National Percentage") +
ggtitle("Days In Past 30 Had Alcoholic Beverage")
days.with.beverage.30
avg.number <- ggplot(avg.num, aes(x=avg_num_drinks, y=percentage)) +
geom_bar(stat = "identity", fill = "#0072b2") +
labs(x = "Average Number of Drinks Per Week", y = "Percentage") +
ggtitle("Average Number of Drinks Per Week")
avg.number
no.in.30 <- least.one[39,3]
refused <- least.one[40,3]
not.sure <- least.one[38,3]
alcohol.data$more_than_5[is.na(alcohol.data$more_than_5)] <- 0
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 77, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 88, 0))
alcohol.data <-  alcohol.data %>% mutate(more_than_5 = replace(more_than_5, more_than_5 == 99, 0))
alcohol.data$more_than_5 = ifelse(alcohol.data$more_than_5 >= 1, 1, 0)
result <- alcohol.data %>% select(state_code, more_than_5) %>% group_by(state_code) %>% mutate(porp = sum(more_than_5) / nrow(n()))
result <- unique(select(result, state_code, porp))
result$State <- state.table$state
result$percentage <- result$porp * 10000
# states <-svydesign(id=~1, strata=~more_than_5, weights=~X_LLCPWT,
#                             data=result, nest=TRUE)
# binge <- prop.table(svytable(~state_code, design=states))
# binge <- as.data.frame(binge)
# binge <- binge %>% mutate(State = state.table$state)
# binge$percentage <- binge$Freq * 100
# Using the data set from the CDC for the correct proportions
# I was not able to get sample weights to output the correct percentages
bd <- read.csv("data/binge.csv")
hd <- read.csv("data/heavyd.csv")
bd <- filter(bd, Response == "Yes") %>% slice(3:55)
hd <- hd %>% filter(Response == "Meet criteria for heavy drinking") %>% select(LocationDesc, Data_Value) %>% slice(3:55)
binge.plot <- ggplot(bd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_bar(stat = "identity", fill = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Binge Drinking As A Percentage Of Population By State")
binge.plot
heavy.drinking.plot <- ggplot(hd, aes(x=reorder(LocationDesc, -Data_Value), y=Data_Value)) +
geom_point(colour = "#0072b2") +
coord_flip() +
labs(x = "State", y = "Percentage") +
ggtitle("Heavy Alcohol Consumption As A Percentage Of Population By State")
heavy.drinking.plot
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
View(apipop)
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
View(apipop)
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
total.districts
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
total.districts
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
View(apistrat)
?table
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
source('~/School_16-17/Q2/info498c/demos/surveys/exercise.R')
shiny::runApp('School_16-17/Q2/info498c/project/global-gag-rule')
runApp('School_16-17/Q2/info498c/project/global-gag-rule')
runApp('School_16-17/Q2/info498c/project/global-gag-rule')
runApp('School_16-17/Q2/info498c/project/global-gag-rule')
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
View(full.exposure.mm)
all.plot
sub.mm.plot
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
lmfit
summary(lmfit)
preds <- predict(lmfit)
plot(preds, full.exposure.mm$Maternal_Mortality)
length(preds)
length(full.exposure.mm$Maternal_Mortality)
lmfit <- lm(Maternal_Mortality ~ Exposure + Num.Ab, data=full.exposure.mm, na.rm=TRUE)
lmfit <- lm(Maternal_Mortality ~ Exposure + Num.Ab, data=full.exposure.mm, na.action = na.omit)
lmfit
preds <- predict(lmfit)
plot(preds, full.exposure.mm$Maternal_Mortality)
plot(preds, full.exposure.mm$Maternal_Mortality[!is.na(full.exposure.mm$Maternal_Mortality)])
plot(preds, full.exposure.mm$Maternal_Mortality[!is.na(full.exposure.mm$Exposure)])
View(full.exposure.mm)
plot(preds, full.exposure.mm$Maternal_Mortality[!is.na(full.exposure.mm$Num.Ab)])
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
runApp()
View(full.exposure.mm)
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
View(full.exposure.mm)
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(exposure.mm)
View(just.sub.saharan)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/School_16-17/Q2/info498c/project/global-gag-rule/WHOdataanalysis.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(who.data)
